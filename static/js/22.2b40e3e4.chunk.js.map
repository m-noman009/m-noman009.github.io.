{"version":3,"file":"static/js/22.2b40e3e4.chunk.js","mappings":"0LAYA,EATiB,WACf,OACE,UAACA,EAAD,YACE,qBACA,wBAOAC,GAAcC,EAAAA,EAAAA,IAAH,0NAYXF,EAAoBG,EAAAA,GAAAA,IAAH,+qBAGD,qBAAGC,MAAkBC,WAenB,qBAAGD,MAAkBE,aAE5BL,EAIEA,EAIAA,GCxCnB,EAVoB,SAAC,GAA4C,IAA1CM,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,SAAUC,EAAqB,EAArBA,QAASC,EAAY,EAAZA,MAClD,OACE,UAACC,EAAD,CAAsBD,MAAOA,EAA7B,WACE,0BAAOD,KACP,wBAAKD,IACJD,IAAY,SAAC,EAAD,QAObI,EAAuBR,EAAAA,GAAAA,IAAH,gwBAUb,qBAAGC,MAAkBQ,aAWrB,qBAAGR,MAAkBQ,c,oJCzBlC,EARyB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC1B,OACE,SAACC,EAAD,CAA2BD,QAASA,EAApC,UACE,SAAC,MAAD,CAASE,KAAM,QAOfD,EAA4BX,EAAAA,GAAAA,IAAH,0ZAgBf,qBAAGC,MAAkBQ,aAInB,qBAAGR,MAAkBC,W,8BC9BjCW,EACG,QADHA,EAEE,OAkBR,EAfqB,WACnB,IAAMZ,GAAQa,EAAAA,EAAAA,IAAYC,EAAAA,KAC1BC,EAAAA,EAAAA,YAAU,WACRC,aAAaC,QAAQ,QAASjB,KAC7B,CAACA,IACJ,IAAMkB,GAAWC,EAAAA,EAAAA,MAOjB,MAAO,CAACnB,EANa,WAEfkB,EADJlB,IAAUY,GACGQ,EAAAA,EAAAA,IAAYR,IACZQ,EAAAA,EAAAA,IAAYR,OCA7B,EAbqB,WACnB,MAA8BS,IAA9B,eAAOrB,EAAP,KAAcsB,EAAd,KACA,OACE,SAACC,EAAD,CAAuBd,QAASa,EAAhC,SACa,UAAVtB,GACC,SAAC,MAAD,CAAcW,KAAM,MAEpB,SAAC,MAAD,CAAaA,KAAM,QAOrBY,EAAwBxB,EAAAA,GAAAA,IAAH,2aACL,qBAAGC,MAAkBwB,QAqB9B,qBAAGxB,MAAkBC,WCJlC,EA7Bc,SAAC,GAA4B,IAA1BG,EAAyB,EAAzBA,SAAyB,IAAfqB,GAAAA,OAAe,MAAV,IAAU,EAClCC,GAAWC,EAAAA,EAAAA,MACjB,EAAwBC,EAAAA,UAAe,GAAvC,eAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,EAAAA,SAAeC,GAA3C,eAAOE,EAAP,KAAeC,EAAf,KAMAJ,EAAAA,WAAgB,WACVC,GAAMG,GAAU,KACnB,CAACH,IAMJ,OAAOI,EAAAA,EAAAA,cACLF,IACE,UAACG,EAAD,CAAgBC,eANG,WAChBN,GAAMH,EAASD,IAK8BI,KAAMA,EAAtD,WACE,SAAC,EAAD,CAAkBpB,QAfL,WACjBqB,GAASD,OAeL,SAAC,EAAD,IACCzB,KAGLgC,SAASC,eAAe,gBAMtBC,GAAWxC,EAAAA,EAAAA,IAAH,wNAURyC,GAAYzC,EAAAA,EAAAA,IAAH,wNAWToC,EAAiBnC,EAAAA,GAAAA,IAAH,0JAME,qBAAGC,MAAkBE,cAChC,qBAAGF,MAAkBQ,aACjB,qBAAGqB,MAEVW,EAAAA,EAAAA,IADA,mGAEIF,IAEJE,EAAAA,EAAAA,IAJA,mGAKID,O,4FCxDZ,UAZiB,WACf,OACE,SAAC,IAAD,WACE,SAACE,EAAD,WACE,SAAC,IAAD,CAAapC,QAAS,cAAeF,UAAQ,EAA7C,0BAUR,IAAMsC,EAAoB1C,EAAAA,GAAAA,IAAH,4+BA+CL,qBAAGC,MAAkB0C","sources":["components/SlideBar.jsx","components/PageHeading.jsx","components/modal/CloseModalButton.jsx","hooks/useDarkMode.js","components/modal/ThemeToggler.jsx","components/modal/Modal.jsx","pages/BlogPage.jsx"],"sourcesContent":["import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst SlideBar = () => {\n  return (\n    <SlideBarContainer>\n      <span></span>\n      <span></span>\n    </SlideBarContainer>\n  );\n};\n\nexport default SlideBar;\n\nconst leftToRight = keyframes`\n  0% {\n    -webkit-transform: translateX(0);\n            transform: translateX(0);\n  }\n  100% {\n    -webkit-transform: translateX(100px);\n            transform: translateX(100px);\n\n  }\n`;\n\nconst SlideBarContainer = styled.div`\n  width: 100px;\n  height: 4px;\n  background-color: ${({ theme }) => theme.primary};\n  display: flex;\n  gap: 4px;\n\n  @media (max-width: 767.98px) {\n    width: 80px;\n  }\n\n  @media (max-width: 479.98px) {\n    width: 60px;\n  }\n\n  span {\n    height: 100%;\n    width: 4px;\n    background-color: ${({ theme }) => theme.background};\n    opacity: 1 !important;\n    animation: ${leftToRight} 3.5s linear forwards;\n    animation-iteration-count: infinite;\n\n    @media (max-width: 767.98px) {\n      animation: ${leftToRight} 3s linear forwards;\n      animation-iteration-count: infinite;\n    }\n    @media (max-width: 479.98px) {\n      animation: ${leftToRight} 2.5s linear forwards;\n      animation-iteration-count: infinite;\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport SlideBar from \"./SlideBar\";\n\nconst PageHeading = ({ slidebar, children, subline, style }) => {\n  return (\n    <PageHeadingContainer style={style}>\n      <span>{subline}</span>\n      <h2>{children}</h2>\n      {slidebar && <SlideBar />}\n    </PageHeadingContainer>\n  );\n};\n\nexport default PageHeading;\n\nconst PageHeadingContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  margin-bottom: 15px;\n  span {\n    font-size: 14px;\n    font-style: Poppins, sans-serif;\n    color: ${({ theme }) => theme.secondary};\n    opacity: 0.7;\n    font-weight: 400;\n    @media (max-width: 767.98px) {\n      font-size: 11px;\n    }\n    @media (max-width: 479.98px) {\n      font-size: 10px;\n    }\n  }\n  h2 {\n    color: ${({ theme }) => theme.secondary};\n    font-size: 46px;\n    font-weight: 700;\n    letter-spacing: -0.25px;\n    line-height: 100%;\n    margin-bottom: 20px;\n\n    @media (max-width: 767.98px) {\n      font-size: 32px;\n      font-weight: 600;\n    }\n    @media (max-width: 479.98px) {\n      font-size: 24px;\n      font-weight: 600;\n    }\n  }\n`;\n","import React from \"react\";\nimport { GrClose } from \"react-icons/gr\";\nimport styled from \"styled-components\";\n\nconst CloseModalButton = ({ onClick }) => {\n  return (\n    <CloseModalButtonContainer onClick={onClick}>\n      <GrClose size={30} />\n    </CloseModalButtonContainer>\n  );\n};\n\nexport default CloseModalButton;\n\nconst CloseModalButtonContainer = styled.div`\n  position: fixed;\n  cursor: pointer;\n  z-index: 999;\n  top: 30px;\n  right: 60px;\n  @media (max-width: 767.98px) {\n    right: 25px;\n  }\n\n  svg {\n    @media (max-width: 767.98px) {\n      height: 20px;\n      width: 20px;\n    }\n    path {\n      stroke: ${({ theme }) => theme.secondary};\n    }\n    :hover {\n      path {\n        stroke: ${({ theme }) => theme.primary};\n        transition: all 0.35s ease;\n      }\n    }\n  }\n`;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectorTheme, switchTheme } from \"../features/theme/themeSlice\";\n\nconst THEMES = {\n  LIGHT: \"light\",\n  DARK: \"dark\",\n};\n\nconst useDarkTheme = () => {\n  const theme = useSelector(selectorTheme);\n  useEffect(() => {\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n  const dispatch = useDispatch();\n  const themeToggler = () => {\n    theme === THEMES.LIGHT\n      ? dispatch(switchTheme(THEMES.DARK))\n      : dispatch(switchTheme(THEMES.LIGHT));\n  };\n\n  return [theme, themeToggler];\n};\n\nexport default useDarkTheme;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { MdLightMode, MdNightlight } from \"react-icons/md\";\nimport useDarkTheme from \"../../hooks/useDarkMode\";\n\nconst ThemeToggler = () => {\n  const [theme, themeToggler] = useDarkTheme();\n  return (\n    <ThemeTogglerContainer onClick={themeToggler}>\n      {theme === \"light\" ? (\n        <MdNightlight size={25} />\n      ) : (\n        <MdLightMode size={25} />\n      )}\n    </ThemeTogglerContainer>\n  );\n};\n\nexport default ThemeToggler;\nconst ThemeTogglerContainer = styled.div`\n  background-color: ${({ theme }) => theme.card};\n  box-shadow: 2px 6px 14px rgba(0, 0, 0, 0.2);\n  height: 50px;\n  width: 50px;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  z-index: 999;\n\n  position: fixed;\n  right: 40px;\n  bottom: 30px;\n\n  @media (max-width: 767.98px) {\n    right: 20px;\n    bottom: 30px;\n  }\n\n  svg {\n    color: ${({ theme }) => theme.primary};\n  }\n`;\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled, { keyframes } from \"styled-components\";\nimport { css } from \"styled-components\";\nimport CloseModalButton from \"./CloseModalButton\";\nimport ThemeToggler from \"./ThemeToggler\";\n\nconst Modal = ({ children, to = \"/\" }) => {\n  const navigate = useNavigate();\n  const [show, setShow] = React.useState(true);\n  const [render, setRender] = React.useState(show);\n\n  const toggleShow = () => {\n    setShow(!show);\n  };\n\n  React.useEffect(() => {\n    if (show) setRender(true);\n  }, [show]);\n\n  const onAnimationEnd = () => {\n    if (!show) navigate(to);\n  };\n\n  return createPortal(\n    render && (\n      <ModalContainer onAnimationEnd={onAnimationEnd} show={show}>\n        <CloseModalButton onClick={toggleShow} />\n        <ThemeToggler />\n        {children}\n      </ModalContainer>\n    ),\n    document.getElementById(\"modal_root\")\n  );\n};\n\nexport default Modal;\n\nconst slideTop = keyframes`\n  0% {\n    -webkit-transform: translateY(100vh);\n            transform: translateY(100vh);\n  }\n  100% {\n    -webkit-transform: translateY(0);\n            transform: translateY(0);\n  }\n`;\nconst slideDown = keyframes`\n  0% {\n    -webkit-transform: translateY(0);\n            transform: translateY(0);\n  }\n  100% {\n    -webkit-transform: translateY(100vh);\n            transform: translateY(100vh);\n  }\n`;\n\nconst ModalContainer = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  background-color: ${({ theme }) => theme.background};\n  color: ${({ theme }) => theme.secondary};\n  animation: ${({ show }) =>\n    show\n      ? css`\n          ${slideTop} 0.75s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\n        `\n      : css`\n          ${slideDown} 0.75s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\n        `};\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Modal from \"../components/modal/Modal\";\nimport PageHeading from \"../components/PageHeading\";\n\nconst BlogPage = () => {\n  return (\n    <Modal>\n      <BlogPageContainer>\n        <PageHeading subline={\"Coming Soon\"} slidebar>\n          My Blog\n        </PageHeading>\n      </BlogPageContainer>\n    </Modal>\n  );\n};\n\nexport default BlogPage;\n\nconst BlogPageContainer = styled.div`\n  overflow-y: scroll;\n  max-height: 100vh;\n  padding: 0 550px;\n  padding-top: 60px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 20px;\n  flex: 1;\n  height: 100%;\n  width: 100%;\n\n  @media (max-width: 2559.98px) {\n    padding: 0 260px;\n    padding-top: 50px;\n  }\n  @media (max-width: 1439.98px) {\n    padding: 0 120px;\n    padding-top: 60px;\n  }\n  @media (max-width: 1023.98px) {\n    padding: 0 100px;\n    padding-top: 60px;\n  }\n  @media (max-width: 767.98px) {\n    padding: 0 40px;\n    padding-top: 60px;\n  }\n  @media (max-width: 479.98px) {\n    padding: 0 30px;\n    padding-top: 60px;\n  }\n\n  @media (max-width: 424.98px) {\n    padding: 0 15px;\n    padding-top: 60px;\n  }\n\n  /* overflow-x: hidden; */\n\n  ::-webkit-scrollbar {\n    width: 8px;\n    background: transparent;\n  }\n  ::-webkit-scrollbar-thumb {\n    background: ${({ theme }) => theme.scrollBar};\n    border-radius: 5px;\n    opacity: 0.9;\n  }\n`;\n"],"names":["SlideBarContainer","leftToRight","keyframes","styled","theme","primary","background","slidebar","children","subline","style","PageHeadingContainer","secondary","onClick","CloseModalButtonContainer","size","THEMES","useSelector","selectorTheme","useEffect","localStorage","setItem","dispatch","useDispatch","switchTheme","useDarkTheme","themeToggler","ThemeTogglerContainer","card","to","navigate","useNavigate","React","show","setShow","render","setRender","createPortal","ModalContainer","onAnimationEnd","document","getElementById","slideTop","slideDown","css","BlogPageContainer","scrollBar"],"sourceRoot":""}