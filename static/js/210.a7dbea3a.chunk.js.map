{"version":3,"file":"static/js/210.a7dbea3a.chunk.js","mappings":"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","sources":["components/SlideBar.jsx","components/PageHeading.jsx","components/modal/CloseModalButton.jsx","hooks/useDarkMode.js","components/modal/ThemeToggler.jsx","components/modal/Modal.jsx","hooks/usePagination.js","components/CustomPagination.jsx","components/projects/ProjectCard.jsx","components/projects/ProjectsList.jsx","components/projects/ProjectsSkeleton.jsx","components/projects/ProjectContent.jsx","pages/ProjectsPage.jsx"],"sourcesContent":["import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\n\nconst SlideBar = () => {\n  return (\n    <SlideBarContainer>\n      <span></span>\n      <span></span>\n    </SlideBarContainer>\n  );\n};\n\nexport default SlideBar;\n\nconst leftToRight = keyframes`\n  0% {\n    -webkit-transform: translateX(0);\n            transform: translateX(0);\n  }\n  100% {\n    -webkit-transform: translateX(100px);\n            transform: translateX(100px);\n\n  }\n`;\n\nconst SlideBarContainer = styled.div`\n  width: 100px;\n  height: 4px;\n  background-color: ${({ theme }) => theme.primary};\n  display: flex;\n  gap: 4px;\n\n  @media (max-width: 767.98px) {\n    width: 80px;\n  }\n\n  @media (max-width: 479.98px) {\n    width: 60px;\n  }\n\n  span {\n    height: 100%;\n    width: 4px;\n    background-color: ${({ theme }) => theme.background};\n    opacity: 1 !important;\n    animation: ${leftToRight} 3.5s linear forwards;\n    animation-iteration-count: infinite;\n\n    @media (max-width: 767.98px) {\n      animation: ${leftToRight} 3s linear forwards;\n      animation-iteration-count: infinite;\n    }\n    @media (max-width: 479.98px) {\n      animation: ${leftToRight} 2.5s linear forwards;\n      animation-iteration-count: infinite;\n    }\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport SlideBar from \"./SlideBar\";\n\nconst PageHeading = ({ slidebar, children, subline, style }) => {\n  return (\n    <PageHeadingContainer style={style}>\n      <span>{subline}</span>\n      <h2>{children}</h2>\n      {slidebar && <SlideBar />}\n    </PageHeadingContainer>\n  );\n};\n\nexport default PageHeading;\n\nconst PageHeadingContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  margin-bottom: 15px;\n  span {\n    font-size: 14px;\n    font-style: Poppins, sans-serif;\n    color: ${({ theme }) => theme.secondary};\n    opacity: 0.7;\n    font-weight: 400;\n    @media (max-width: 767.98px) {\n      font-size: 11px;\n    }\n    @media (max-width: 479.98px) {\n      font-size: 10px;\n    }\n  }\n  h2 {\n    color: ${({ theme }) => theme.secondary};\n    font-size: 46px;\n    font-weight: 700;\n    letter-spacing: -0.25px;\n    line-height: 100%;\n    margin-bottom: 20px;\n\n    @media (max-width: 767.98px) {\n      font-size: 32px;\n      font-weight: 600;\n    }\n    @media (max-width: 479.98px) {\n      font-size: 24px;\n      font-weight: 600;\n    }\n  }\n`;\n","import React from \"react\";\nimport { GrClose } from \"react-icons/gr\";\nimport styled from \"styled-components\";\n\nconst CloseModalButton = ({ onClick }) => {\n  return (\n    <CloseModalButtonContainer onClick={onClick}>\n      <GrClose size={30} />\n    </CloseModalButtonContainer>\n  );\n};\n\nexport default CloseModalButton;\n\nconst CloseModalButtonContainer = styled.div`\n  position: fixed;\n  cursor: pointer;\n  z-index: 999;\n  top: 30px;\n  right: 60px;\n  @media (max-width: 767.98px) {\n    right: 25px;\n  }\n\n  svg {\n    @media (max-width: 767.98px) {\n      height: 20px;\n      width: 20px;\n    }\n    path {\n      stroke: ${({ theme }) => theme.secondary};\n    }\n    :hover {\n      path {\n        stroke: ${({ theme }) => theme.primary};\n        transition: all 0.35s ease;\n      }\n    }\n  }\n`;\n","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { selectorTheme, switchTheme } from \"../features/theme/themeSlice\";\n\nconst THEMES = {\n  LIGHT: \"light\",\n  DARK: \"dark\",\n};\n\nconst useDarkTheme = () => {\n  const theme = useSelector(selectorTheme);\n  useEffect(() => {\n    localStorage.setItem(\"theme\", theme);\n  }, [theme]);\n  const dispatch = useDispatch();\n  const themeToggler = () => {\n    theme === THEMES.LIGHT\n      ? dispatch(switchTheme(THEMES.DARK))\n      : dispatch(switchTheme(THEMES.LIGHT));\n  };\n\n  return [theme, themeToggler];\n};\n\nexport default useDarkTheme;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { MdLightMode, MdNightlight } from \"react-icons/md\";\nimport useDarkTheme from \"../../hooks/useDarkMode\";\n\nconst ThemeToggler = () => {\n  const [theme, themeToggler] = useDarkTheme();\n  return (\n    <ThemeTogglerContainer onClick={themeToggler}>\n      {theme === \"light\" ? (\n        <MdNightlight size={25} />\n      ) : (\n        <MdLightMode size={25} />\n      )}\n    </ThemeTogglerContainer>\n  );\n};\n\nexport default ThemeToggler;\nconst ThemeTogglerContainer = styled.div`\n  background-color: ${({ theme }) => theme.card};\n  box-shadow: 2px 6px 14px rgba(0, 0, 0, 0.2);\n  height: 50px;\n  width: 50px;\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  cursor: pointer;\n  z-index: 999;\n\n  position: fixed;\n  right: 40px;\n  bottom: 30px;\n\n  @media (max-width: 767.98px) {\n    right: 20px;\n    bottom: 30px;\n  }\n\n  svg {\n    color: ${({ theme }) => theme.primary};\n  }\n`;\n","import React from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { useNavigate } from \"react-router-dom\";\nimport styled, { keyframes } from \"styled-components\";\nimport { css } from \"styled-components\";\nimport CloseModalButton from \"./CloseModalButton\";\nimport ThemeToggler from \"./ThemeToggler\";\n\nconst Modal = ({ children, to = \"/\" }) => {\n  const navigate = useNavigate();\n  const [show, setShow] = React.useState(true);\n  const [render, setRender] = React.useState(show);\n\n  const toggleShow = () => {\n    setShow(!show);\n  };\n\n  React.useEffect(() => {\n    if (show) setRender(true);\n  }, [show]);\n\n  const onAnimationEnd = () => {\n    if (!show) navigate(to);\n  };\n\n  return createPortal(\n    render && (\n      <ModalContainer onAnimationEnd={onAnimationEnd} show={show}>\n        <CloseModalButton onClick={toggleShow} />\n        <ThemeToggler />\n        {children}\n      </ModalContainer>\n    ),\n    document.getElementById(\"modal_root\")\n  );\n};\n\nexport default Modal;\n\nconst slideTop = keyframes`\n  0% {\n    -webkit-transform: translateY(100vh);\n            transform: translateY(100vh);\n  }\n  100% {\n    -webkit-transform: translateY(0);\n            transform: translateY(0);\n  }\n`;\nconst slideDown = keyframes`\n  0% {\n    -webkit-transform: translateY(0);\n            transform: translateY(0);\n  }\n  100% {\n    -webkit-transform: translateY(100vh);\n            transform: translateY(100vh);\n  }\n`;\n\nconst ModalContainer = styled.div`\n  position: fixed;\n  left: 0;\n  top: 0;\n  bottom: 0;\n  right: 0;\n  background-color: ${({ theme }) => theme.background};\n  color: ${({ theme }) => theme.secondary};\n  animation: ${({ show }) =>\n    show\n      ? css`\n          ${slideTop} 0.75s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\n        `\n      : css`\n          ${slideDown} 0.75s cubic-bezier(0.250, 0.460, 0.450, 0.940) both;\n        `};\n`;\n","import { useMemo } from \"react\";\n\nexport const DOTS = \"...\";\n\nconst range = (start, end) => {\n  let length = end - start + 1;\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\nexport const usePagination = ({\n  totalCount,\n  pageSize,\n  siblingCount = 1,\n  currentPage,\n}) => {\n  const paginationRange = useMemo(() => {\n    const totalPageCount = Math.ceil(totalCount / pageSize);\n\n    // Pages count is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\n    const totalPageNumbers = siblingCount + 5;\n\n    /*\n      If the number of pages is less than the page numbers we want to show in our\n      paginationComponent, we return the range [1..totalPageCount]\n    */\n    if (totalPageNumbers >= totalPageCount) {\n      return range(1, totalPageCount);\n    }\n\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, 1);\n    const rightSiblingIndex = Math.min(\n      currentPage + siblingCount,\n      totalPageCount\n    );\n\n    /*\n      We do not want to show dots if there is only one position left \n      after/before the left/right page count as that would lead to a change if our Pagination\n      component size which we do not want\n    */\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPageCount - 2;\n\n    const firstPageIndex = 1;\n    const lastPageIndex = totalPageCount;\n\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      let leftItemCount = 3 + 2 * siblingCount;\n      let leftRange = range(1, leftItemCount);\n\n      return [...leftRange, DOTS, totalPageCount];\n    }\n\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      let rightItemCount = 3 + 2 * siblingCount;\n      let rightRange = range(\n        totalPageCount - rightItemCount + 1,\n        totalPageCount\n      );\n      return [firstPageIndex, DOTS, ...rightRange];\n    }\n\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      let middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      return [firstPageIndex, DOTS, ...middleRange, DOTS, lastPageIndex];\n    }\n  }, [totalCount, pageSize, siblingCount, currentPage]);\n\n  return paginationRange;\n};\n","import React from \"react\";\nimport classnames from \"classnames\";\nimport { usePagination, DOTS } from \"../hooks/usePagination\";\nimport styled from \"styled-components\";\n\nconst CustomPagination = (props) => {\n  const {\n    onPageChange,\n    totalCount,\n    siblingCount = 1,\n    currentPage,\n    pageSize,\n    className,\n  } = props;\n\n  const paginationRange = usePagination({\n    currentPage,\n    totalCount,\n    siblingCount,\n    pageSize,\n  });\n\n  if (currentPage === 0 || paginationRange.length < 2) {\n    return null;\n  }\n\n  const onNext = () => {\n    onPageChange(currentPage + 1);\n  };\n\n  const onPrevious = () => {\n    onPageChange(currentPage - 1);\n  };\n\n  let lastPage = paginationRange[paginationRange.length - 1];\n  return (\n    <PaginationContainer>\n      <ul\n        className={classnames(\"pagination-container\", {\n          [className]: className,\n        })}\n      >\n        <li\n          className={classnames(\"pagination-item\", {\n            disabled: currentPage === 1,\n          })}\n          onClick={onPrevious}\n        >\n          <div className=\"arrow left\" />\n        </li>\n        {paginationRange.map((pageNumber, id) => {\n          if (pageNumber === DOTS) {\n            return (\n              <li key={id} className=\"pagination-item dots\">\n                &#8230;\n              </li>\n            );\n          }\n\n          return (\n            <li\n              key={id}\n              className={classnames(\"pagination-item\", {\n                selected: pageNumber === currentPage,\n              })}\n              onClick={() => onPageChange(pageNumber)}\n            >\n              {pageNumber}\n            </li>\n          );\n        })}\n        <li\n          className={classnames(\"pagination-item\", {\n            disabled: currentPage === lastPage,\n          })}\n          onClick={onNext}\n        >\n          <div className=\"arrow right\" />\n        </li>\n      </ul>\n    </PaginationContainer>\n  );\n};\n\nexport default CustomPagination;\n\nconst PaginationContainer = styled.div`\n  display: flex;\n  .pagination-container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    list-style-type: none;\n    flex-wrap: wrap;\n\n    .pagination-item {\n      display: flex;\n      height: 32px;\n      text-align: center;\n      margin: auto 4px;\n      margin-bottom: 4px;\n      color: ${({ theme }) => theme.secondary};\n      box-sizing: border-box;\n      align-items: center;\n      justify-content: center;\n      letter-spacing: 0.01071em;\n      border-radius: 16px;\n      font-size: 13px;\n      min-width: 32px;\n\n      &.dots:hover {\n        background-color: transparent;\n        cursor: default;\n      }\n      &:hover {\n        background-color: ${({ theme }) => theme.primary}dd;\n        cursor: pointer;\n      }\n\n      &.selected {\n        background-color: ${({ theme }) => theme.primary};\n        color: ${({ theme }) => theme.grey[100]}dd;\n      }\n\n      .arrow {\n        &::before {\n          position: relative;\n          content: \"\";\n          /* By using an em scale, the arrows will size with the font */\n          display: inline-block;\n          width: 0.5em;\n          height: 0.5em;\n          border-right: 0.12em solid ${({ theme }) => theme.secondary}dd;\n          border-top: 0.12em solid ${({ theme }) => theme.secondary}dd;\n        }\n\n        &.left {\n          transform: rotate(-135deg);\n        }\n\n        &.right {\n          transform: rotate(45deg);\n        }\n      }\n\n      &.disabled {\n        pointer-events: none;\n\n        .arrow::before {\n          border-right: 0.12em solid ${({ theme }) => theme.secondary}6d;\n          border-top: 0.12em solid ${({ theme }) => theme.secondary}6d;\n        }\n\n        &:hover {\n          background-color: transparent;\n          cursor: default;\n        }\n      }\n    }\n  }\n`;\n","import React, { useState } from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport { VscGithubInverted } from \"react-icons/vsc\";\nimport Skeleton from \"react-loading-skeleton\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\n\nconst ProjectCard = ({ name, html_url, created_at, id }) => {\n  const [imageLoad, setImageLoad] = useState(false);\n  const theme = useTheme();\n  const monthNames = [\n    \"Jan\",\n    \"Feb\",\n    \"Mar\",\n    \"Apr\",\n    \"May\",\n    \"Jun\",\n    \"Jul\",\n    \"Aug\",\n    \"Sep\",\n    \"Oct\",\n    \"Nov\",\n    \"Dec\",\n  ];\n\n  const handleImageLoad = () => {\n    setImageLoad(true);\n  };\n\n  return (\n    <ProjectCardContainer>\n      <ImageContainer>\n        {!imageLoad && (\n          <Skeleton\n            baseColor={theme.skeletonBase}\n            highlightColor={theme.skeletonHighlight}\n            height=\"100%\"\n            style={{\n              lineHeight: \"1\",\n            }}\n          />\n        )}\n        <img\n          src={`https://picsum.photos/350/200?${Math.floor(\n            Math.random() * 10 * id\n          )}`}\n          alt=\"cover\"\n          onLoad={handleImageLoad}\n        />\n        <span></span>\n        <DateContainer>\n          {`${new Date(created_at).getDate()} ${\n            monthNames[new Date(created_at).getMonth()]\n          }, ${new Date(created_at).getUTCFullYear()}`}\n        </DateContainer>\n      </ImageContainer>\n      <TypographyContainer>\n        <h4>{name.length > 30 ? `${name.substring(0, 30)}...` : name}</h4>\n        <a href={html_url} target=\"_blank\" rel=\"noreferrer\">\n          <VscGithubInverted size={20} />\n          <span>View Code</span>\n        </a>\n      </TypographyContainer>\n    </ProjectCardContainer>\n  );\n};\n\nexport default ProjectCard;\n\nconst DateContainer = styled.div`\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  background-color: ${({ theme }) => theme.primary};\n  color: ${({ theme }) => theme.grey[100]};\n  padding: 5px 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 13px;\n  font-weight: 500;\n  @media (max-width: 767.98px) {\n    font-size: 10px;\n  }\n  @media (max-width: 479.98px) {\n    font-size: 8px;\n  }\n`;\nconst TypographyContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 10px;\n  padding-left: 10px;\n  flex: 0.2;\n\n  a {\n    background-color: ${({ theme }) => theme.primary};\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    gap: 10px;\n    padding: 8px 15px;\n    border-radius: 25px;\n    align-self: flex-start;\n    cursor: pointer;\n    color: ${({ theme }) => theme.grey[100]};\n    font-size: 12px;\n    text-decoration: none;\n\n    :hover {\n      box-shadow: 4px 10px 14px rgba(0, 171, 85, 0.15);\n      transition: all 0.25s ease-in-out;\n    }\n    @media (max-width: 767.98px) {\n      padding: 6px 12px;\n      font-size: 10px;\n    }\n    @media (max-width: 479.98px) {\n      padding: 4px 10px;\n      font-size: 8px;\n      font-weight: 400;\n    }\n  }\n\n  h4 {\n    font-weight: 500;\n    font-size: 17px;\n    line-height: 1.2;\n    align-self: flex-start;\n    text-transform: uppercase;\n    color: ${({ theme }) => theme.secondary};\n\n    @media (max-width: 767.98px) {\n      font-size: 14px;\n      text-transform: uppercase;\n    }\n    @media (max-width: 479.98px) {\n      font-size: 11px;\n      text-transform: uppercase;\n    }\n  }\n`;\n\nconst ImageContainer = styled.div`\n  flex: 0.8;\n  height: 100%;\n  width: 100%;\n  position: relative;\n  background-color: red;\n  img {\n    object-fit: cover;\n    background-color: transparent;\n    vertical-align: middle;\n    border-radius: 0.25rem;\n    max-width: 100%;\n    width: 100%;\n    height: 100%;\n  }\n  span {\n    overflow: hidden;\n    position: absolute;\n    left: 0;\n    right: 0;\n    top: 0;\n    bottom: 0;\n    flex: 1;\n    flex: 1;\n    width: 100%;\n    height: 100%;\n    background-image: linear-gradient(\n      45deg,\n      ${({ theme }) => theme.darker} 30%,\n      ${({ theme }) => theme.light} 90%\n    );\n    opacity: 0.7;\n  }\n`;\n\nconst ProjectCardContainer = styled.div`\n  background-color: ${({ theme }) => theme.card};\n  border-bottom: 2px solid transparent;\n  box-shadow: 2px 6px 14px rgba(0, 0, 0, 0.2);\n  transition: all 0.35s ease-in-out;\n  width: 354px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding-bottom: 10px;\n\n  @media (max-width: 375.98px) {\n    width: 250px;\n  }\n  :hover {\n    border-bottom: 2px solid ${({ theme }) => theme.primary};\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst ProjectsList = ({ children }) => {\n  return <ProjectsListContainer>{children}</ProjectsListContainer>;\n};\n\nexport default ProjectsList;\n\nconst ProjectsListContainer = styled.div`\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  gap: 20px;\n  height: 100%;\n\n  h1 {\n    font-weight: 500;\n    font-size: 26px;\n    line-height: 1.2;\n    margin-bottom: 20px;\n    color: ${({ theme }) => theme.secondary};\n\n    @media (max-width: 767.98px) {\n      font-size: 20px;\n    }\n    @media (max-width: 479.98px) {\n      font-size: 18px;\n    }\n  }\n`;\n","import React from \"react\";\nimport styled, { useTheme } from \"styled-components\";\nimport Skeleton from \"react-loading-skeleton\";\nimport \"react-loading-skeleton/dist/skeleton.css\";\n\nconst ProjectsSkeleton = () => {\n  const theme = useTheme();\n  return (\n    <ProjectsSkeletonContainer>\n      <ImageContainer>\n        <Skeleton\n          baseColor={theme.skeletonBase}\n          highlightColor={theme.skeletonHighlight}\n          height=\"100%\"\n          style={{\n            lineHeight: \"1\",\n          }}\n        />\n      </ImageContainer>\n      <TypographyContainer>\n        <Skeleton\n          baseColor={theme.skeletonBase}\n          highlightColor={theme.skeletonHighlight}\n          count={2}\n          style={{\n            lineHeight: \"0.7\",\n          }}\n        />\n      </TypographyContainer>\n    </ProjectsSkeletonContainer>\n  );\n};\n\nexport default ProjectsSkeleton;\n\nconst ImageContainer = styled.div`\n  flex: 0.8;\n`;\nconst TypographyContainer = styled.div`\n  flex: 0.2;\n  padding: 0 10px;\n`;\n\nconst ProjectsSkeletonContainer = styled.div`\n  background-color: ${({ theme }) => theme.card};\n  box-shadow: 2px 6px 14px rgba(0, 0, 0, 0.2);\n  transition: all 0.35s ease-in-out;\n  width: 354px;\n  height: 230px;\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  padding-bottom: 10px;\n\n  @media (max-width: 375.98px) {\n    width: 250px;\n  }\n`;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport {\n  fetchRepos,\n  selectorRepos,\n  selectorReposLoading,\n} from \"../../features/repos/reposSlice\";\nimport CustomPagination from \"../CustomPagination\";\nimport ProjectCard from \"./ProjectCard\";\nimport ProjectsList from \"./ProjectsList\";\nimport ProjectsSkeleton from \"./ProjectsSkeleton\";\n\nconst ProjectContent = () => {\n  const dispatch = useDispatch();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [REPOS_PER_PAGE] = useState(3);\n\n  React.useEffect(() => {\n    dispatch(fetchRepos());\n  }, [dispatch]);\n\n  const reposLoading = useSelector(selectorReposLoading);\n  const repos = useSelector(selectorRepos);\n\n  const currentRepos = React.useMemo(() => {\n    const firstPageIndex = (currentPage - 1) * REPOS_PER_PAGE;\n    const lastPageIndex = firstPageIndex + REPOS_PER_PAGE;\n    return repos.slice(firstPageIndex, lastPageIndex);\n  }, [currentPage, repos, REPOS_PER_PAGE]);\n\n  return (\n    <ProjectContentContainer>\n      <ProjectsList>\n        {reposLoading ? (\n          <>\n            <ProjectsSkeleton />\n            <ProjectsSkeleton />\n            <ProjectsSkeleton />\n          </>\n        ) : currentRepos?.length ? (\n          currentRepos?.map((repo, id) => (\n            <ProjectCard\n              id={id}\n              key={id}\n              name={repo.name}\n              html_url={repo.html_url}\n              created_at={repo.created_at}\n            />\n          ))\n        ) : (\n          <h1>No project found!</h1>\n        )}\n      </ProjectsList>\n      <PaginationWrapper>\n        {!reposLoading && (\n          <CustomPagination\n            className=\"pagination-bar\"\n            currentPage={currentPage}\n            totalCount={repos.length}\n            pageSize={REPOS_PER_PAGE}\n            onPageChange={(page) => setCurrentPage(page)}\n          />\n        )}\n      </PaginationWrapper>\n    </ProjectContentContainer>\n  );\n};\n\nexport default ProjectContent;\n\nconst PaginationWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 60px;\n`;\n\nconst ProjectContentContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 60px;\n  margin-top: 30px;\n  margin-bottom: 30px;\n  width: 100%;\n  flex: 1;\n\n  @media (max-width: 1023.98px) {\n    gap: 40px;\n  }\n  @media (max-width: 767.98px) {\n    flex-direction: column;\n    align-items: center;\n    margin-top: 30px;\n  }\n  @media (max-width: 479.98px) {\n    margin-top: 20px;\n  }\n`;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Modal from \"../components/modal/Modal\";\nimport PageHeading from \"../components/PageHeading\";\nimport ProjectContent from \"../components/projects/ProjectContent\";\n\nconst ProjectsPage = () => {\n  return (\n    <Modal>\n      <ProjectsPageContainer>\n        <PageHeading subline={\"Showcasing some of my recent projects\"} slidebar>\n          Projects\n        </PageHeading>\n        <ProjectContent />\n      </ProjectsPageContainer>\n    </Modal>\n  );\n};\n\nexport default ProjectsPage;\n\nconst ProjectsPageContainer = styled.div`\n  overflow-y: scroll;\n  max-height: 100vh;\n  padding: 0 550px;\n  padding-top: 60px;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: center;\n  gap: 20px;\n  flex: 1;\n  height: 100%;\n  width: 100%;\n\n  @media (max-width: 2559.98px) {\n    padding: 0 260px;\n    padding-top: 50px;\n  }\n  @media (max-width: 1439.98px) {\n    padding: 0 120px;\n    padding-top: 60px;\n  }\n  @media (max-width: 1023.98px) {\n    padding: 0 100px;\n    padding-top: 60px;\n  }\n  @media (max-width: 767.98px) {\n    padding: 0 40px;\n    padding-top: 60px;\n  }\n  @media (max-width: 479.98px) {\n    padding: 0 30px;\n    padding-top: 60px;\n  }\n\n  @media (max-width: 424.98px) {\n    padding: 0 15px;\n    padding-top: 60px;\n  }\n\n  /* overflow-x: hidden; */\n\n  ::-webkit-scrollbar {\n    width: 8px;\n    background: transparent;\n  }\n  ::-webkit-scrollbar-thumb {\n    background: ${({ theme }) => theme.scrollBar};\n    border-radius: 5px;\n    opacity: 0.9;\n  }\n`;\n"],"names":["SlideBarContainer","leftToRight","keyframes","styled","theme","primary","background","slidebar","children","subline","style","PageHeadingContainer","secondary","onClick","CloseModalButtonContainer","size","THEMES","useSelector","selectorTheme","useEffect","localStorage","setItem","dispatch","useDispatch","switchTheme","useDarkTheme","themeToggler","ThemeTogglerContainer","card","to","navigate","useNavigate","React","show","setShow","render","setRender","createPortal","ModalContainer","onAnimationEnd","document","getElementById","slideTop","slideDown","css","DOTS","range","start","end","length","Array","from","_","idx","props","onPageChange","totalCount","siblingCount","currentPage","pageSize","className","paginationRange","useMemo","totalPageCount","Math","ceil","leftSiblingIndex","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","firstPageIndex","lastPageIndex","leftRange","rightRange","middleRange","usePagination","lastPage","PaginationContainer","classnames","disabled","map","pageNumber","id","selected","grey","name","html_url","created_at","useState","imageLoad","setImageLoad","useTheme","ProjectCardContainer","ImageContainer","baseColor","skeletonBase","highlightColor","skeletonHighlight","height","lineHeight","src","floor","random","alt","onLoad","DateContainer","Date","getDate","getMonth","getUTCFullYear","TypographyContainer","substring","href","target","rel","darker","light","ProjectsListContainer","ProjectsSkeletonContainer","count","setCurrentPage","REPOS_PER_PAGE","fetchRepos","reposLoading","selectorReposLoading","repos","selectorRepos","currentRepos","slice","ProjectContentContainer","repo","PaginationWrapper","page","Modal","ProjectsPageContainer","PageHeading","scrollBar"],"sourceRoot":""}